<launch>
<!-- 无人机初始位置, 修改时需要同时修改cz_planner.yaml中的vehicInitPos   -->
   <arg name="init_x" value="-4.0"/>
   <arg name="init_y" value="0.0"/>
   <arg name="init_z" value="1.0"/>
<!-- 地图大小 -->
    <arg name="map_size_x" value="50"/>
    <arg name="map_size_y" value="50"/>
    <arg name="map_size_z" value="3"/>
<!-- 无人机odom topic -->
    <arg name="odometry_topic" value="/visual_slam/odom"/>


<!-- 生成地图 -->
    <node pkg="mockamap" type="mockamap_node" name="mockamap_node" output="screen">
        <remap from="/mock_map" to="/global_cloud"/>
        <param name="seed" type="int" value="127"/>
        <param name="update_freq" type="double" value="0.5"/>

        <!--  box edge length, unit meter-->
        <param name="resolution" type="double" value="0.1"/>

        <!-- map size unit meter-->
        <param name="x_length" value="$(arg map_size_x)"/>
        <param name="y_length" value="$(arg map_size_y)"/>
        <param name="z_length" value="$(arg map_size_z)"/>

        <param name="type" type="int" value="2"/>
        <!-- 1 perlin noise parameters -->
        <!-- complexity:    base noise frequency,
                                large value will be complex
                                typical 0.0 ~ 0.5 -->
        <!-- fill:          infill persentage
                                typical: 0.4 ~ 0.0 -->
        <!-- fractal:       large value will have more detail-->
        <!-- attenuation:   for fractal attenuation
                                typical: 0.0 ~ 0.5 -->

        <param name="complexity"    type="double" value="0.025"/>
        <param name="fill"          type="double" value="0.09"/>
        <param name="fractal"       type="int"    value="1"/>
        <param name="attenuation"   type="double" value="0.1"/>
  </node>

   <!-- Simulator -->
   <node pkg="so3_quadrotor_simulator"
         type="quadrotor_simulator_so3"
         name="quadrotor_simulator_so3"
         output="screen">
     <param name="rate/odom" value="200.0"/>

     <param name="simulator/init_state_x" value="$(arg init_x)"/>
     <param name="simulator/init_state_y" value="$(arg init_y)"/>
     <param name="simulator/init_state_z" value="$(arg init_z)"/>
     <remap from="~odom" to="$(arg odometry_topic)"/>
     <remap from="~cmd" to="/so3_cmd"/>
     <remap from="~imu" to="/sim/imu"/>     
   </node>
 
   <!-- Controller -->  
   <node pkg="nodelet"
     type="nodelet"
     args="standalone so3_control/SO3ControlNodelet"
     name="so3_control"
     required="true"
     output="screen">
     <param name="so3_control/init_state_x" value="$(arg init_x)"/>
     <param name="so3_control/init_state_y" value="$(arg init_y)"/>
     <param name="so3_control/init_state_z" value="$(arg init_z)"/>
     <remap from="~odom" to="$(arg odometry_topic)"/>
     <remap from="~position_cmd" to="/position_cmd"/>
     <remap from="~motors" to="motors"/>
     <remap from="~corrections" to="corrections"/>
     <remap from="~so3_cmd" to="/so3_cmd"/>
     <remap from="~imu" to="/sim/imu"/>
     <rosparam file="$(find so3_control)/config/gains_hummingbird.yaml"/>
     <rosparam file="$(find so3_control)/config/corrections_hummingbird.yaml"/>
     <param name="mass" value="0.98"/>
     <param name="use_angle_corrections " value="false"/>
     <param name="use_external_yaw "      value="false"/>
     <param name="gains/rot/z" value="1.0"/>    
     <param name="gains/ang/z" value="0.1"/>        
   </node>  

 
   <!--node pkg="so3_control" name="control_example" type="control_example" output="screen"/-->
 
   <!-- Visualization -->
  <node pkg="odom_visualization" name="odom_visualization" type="odom_visualization" output="screen">
        <remap from="~odom" to="$(arg odometry_topic)"/>
        <param name="color/a" value="0.5"/>    
        <param name="color/r" value="1.0"/>        
        <param name="color/g" value="0.0"/>        
        <param name="color/b" value="0.0"/>       
        <param name="covariance_scale" value="100.0"/>       
        <param name="robot_scale" value="1.0"/>
        <param name="tf45" value="true"/>
  </node>

 <node pkg="local_sensing_node" type="pcl_render_node" name="pcl_render_node" output="screen">
        <rosparam command="load" file="$(find local_sensing_node)/params/camera.yaml" />
        <param name="sensing_horizon"  value="5.0" />
        <param name="sensing_rate"     value="30.0"/>
        <param name="estimation_rate"  value="30.0"/>

        <param name="map/x_size"     value="$(arg map_size_x)"/>
        <param name="map/y_size"     value="$(arg map_size_y)"/>
        <param name="map/z_size"     value="$(arg map_size_z)"/>

        <remap from="~global_map" to="/global_cloud"/>
        <!-- <remap from="~global_map" to="/mock_map"/> -->
        <remap from="~odometry"   to="$(arg odometry_topic)"/>
  </node>

   <node name="rviz" pkg="rviz" type="rviz"
      args="-d $(find so3_quadrotor_simulator)/config/rviz.rviz"
      />
 </launch>



